@using WebApp.Models.Membership
@model AccountLoginViewModel

@{
    ViewData["title"] = "Login";
}

@section Styles {



}

<section class="login-page">

    <div class="login-box">

        <div class="card">
            <div class="card-body login-card-body">
                <p class="login-box-msg">Welcome back.</p>

                <form asp-controller="Account" asp-action="Login" method="post">
                    <div class="row">
                        <div class="col">
                            @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-info alert-dismissible">
                                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                                @TempData["Message"]
                            </div>
                        }

                            @if (TempData["ErrorMessage"] != null)
                        {
                            <div class="alert alert-warning alert-dismissible">
                                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                                @TempData["ErrorMessage"]
                            </div>
                        }
                        </div>
                    </div>

                    <div class="row">
                        <div class="col">
                            <div class="form-group">
                                <div class="input-group">
                                    <input v-model="v_@Html.NameFor(model => model.Email)" asp-for="Email" class="form-control" placeholder="@Html.DisplayNameFor(model => model.Email)" />
                                    <div class="input-group-append">
                                        <div class="input-group-text">
                                            <span class="fa fa-user"></span>
                                        </div>
                                    </div>
                                </div>
                                <span asp-validation-for="Email" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <div class="input-group">
                                    <input v-model="v_@Html.NameFor(model => model.Password)" asp-for="Password" class="form-control" placeholder="@Html.DisplayNameFor(model => model.Password)" />
                                    <div class="input-group-append">
                                        <div class="input-group-text">
                                            <span class="fa fa-lock"></span>
                                        </div>
                                    </div>
                                </div>
                                <span asp-validation-for="Password" class="text-danger"></span>
                            </div>
                            <div class="form-group d-flex align-items-center justify-content-between mt-4 mb-0">
                                <a href="@Url.Action("ForgotPassword", "Account")">Forgot Password!</a>
                                <button type="submit" class="btn btn-primary">Sign In</button>
                            </div>
                        </div>
                    </div>
                </form>

            </div>
            <div class="card-footer">
                <div class="text-center justify-content-center">
                    <a href="@Url.Action("Register", "Account")">Need an acccount? Sign Up!</a>
                </div>
            </div>
        </div>
    </div>

</section>

@section Scripts {

    <script type="text/javascript" src="~/js/miscellaneous.js"></script>

    <script>

        var vuem = new Vue({
            el: defaultEl_vue,
            data: function () {
                return {
                    v_@Html.NameFor(model => model.Email): '@Html.ValueFor(model => model.Email)',
                    v_@Html.NameFor(model => model.Password): ''
                };
            },
            methods: {

            },
            created: function () {
            },
            mounted: function () {
            }
        });

    </script>

}